class e extends HTMLElement{get score(){return this._score}set score(e){this._score=e,this.innerHTML=`\n      <style>\n        game-score {\n          contain: content;\n          display: grid;\n          place-content: center;\n        }\n      </style>\n      <p>Score: ${this._score}</p>\n    `}constructor(){super(),this._score=0,this.score=0}}class t extends HTMLElement{connectedCallback(){var e;this.innerHTML="\n    <style>\n    game-tile {\n      display: grid;\n      contain: layout size style;\n      grid-auto-flow: row;\n      place-content: center;\n    }\n    </style>\n    ";let t=null!==(e=this.getAttribute("x"))&&void 0!==e?e:"";var n;this.x=parseInt(t);let s=null!==(n=this.getAttribute("y"))&&void 0!==n?n:"";this.y=parseInt(s)}}class n extends HTMLElement{static get observedAttributes(){return["rows","columns"]}createBoard(){const e=document.createElement("template");e.innerHTML=`\n      <style>\n        game-board {\n          display: grid;\n          grid-template-columns: repeat(${this.columns}, 1fr);\n          contain: content;\n        }\n      </style>`,this.replaceChildren(e.content);for(let e=0;e<this.rows;e++)for(let t=0;t<this.columns;t++){const n=document.createElement("game-tile");n.setAttribute("x",t.toString()),n.setAttribute("y",e.toString()),this.appendChild(n),this.tiles.push(n)}}connectedCallback(){console.log("game-board connected")}attributeChangedCallback(){var e;const t=null!==(e=this.getAttribute("rows"))&&void 0!==e?e:"4";var n;this.rows=parseInt(t);const s=null!==(n=this.getAttribute("columns"))&&void 0!==n?n:"4";this.columns=parseInt(s),console.log("attributes changed"),this.createBoard()}constructor(...e){super(...e),this.tiles=[]}}class s extends HTMLElement{connectedCallback(){var e,t;this.init&&(this.id="id"+Math.random().toString(16).slice(2,10),this.setAttribute("id",this.id),this.init=!1,this.style.contain="content",this.style.display="grid",this.style.placeContent="center",this.style.placeItems="center",this.style.position="relative",this.style.animation=`slide${this.id} 250ms ease-in-out`),this.oldOffsetLeft=null!==(e=this.oldOffsetLeft)&&void 0!==e?e:this.offsetLeft,this.oldOffsetTop=null!==(t=this.oldOffsetTop)&&void 0!==t?t:this.offsetTop,this.innerHTML=`\n    <style>\n      @keyframes slide${this.id} {\n        from{\n          transform: translate(${this.oldOffsetLeft-this.offsetLeft}px, ${this.oldOffsetTop-this.offsetTop}px);\n        }\n        to {\n          transform: translate(0, 0);\n        }\n      }\n    </style>\n    <p>${this.value}</p>\n    `,this.oldOffsetTop=this.offsetTop,this.oldOffsetLeft=this.offsetLeft}constructor(...e){super(...e),this.value=2,this.init=!0}}const o={"game-board":n,"game-token":s,"game-tile":t,"game-score":e},r={up:{main:"x",cross:"y",reversed:!1,length:"columns"},down:{main:"x",cross:"y",reversed:!0,length:"columns"},left:{main:"y",cross:"x",reversed:!1,length:"rows"},right:{main:"y",cross:"x",reversed:!0,length:"rows"}},i={ArrowLeft:"left",ArrowRight:"right",ArrowDown:"down",ArrowUp:"up"};Object.entries(o).forEach((([e,t])=>{console.info(`Registering <${e}>`),customElements.define(e,t)}));const l=document.getElementsByTagName("game-board")[0],a=document.getElementsByTagName("game-score")[0],c=Array.from(l.querySelectorAll("game-tile"));function u(e,t){const n=t.main;return e.reduce(((e,s)=>{const o=s[n];return e.hasOwnProperty(o)&&t.reversed?e[o].unshift(s):e.hasOwnProperty(o)?e[o].push(s):e[o]=[s],e}),[])}function d(e,t){e.value*=2,a.score=a.score+e.value,t.replaceWith(e)}function h(e,t,n){e[t+1].appendChild(n)}function f(e){return e.filter((e=>Array.from(e.children).every((e=>!(e instanceof s)))))}function m(){const e=f(c),t=Math.floor(Math.random()*e.length),n=document.createElement("game-token");e[t].appendChild(n)}function g(e){let t={name:e.localName,attributes:[],children:[]};return Array.from(e.attributes).forEach((e=>{t.attributes.push({name:e.name,value:e.value})})),Array.from(e.children).forEach((e=>{t.children.push(g(e))})),JSON.stringify(t)}console.log("Starting game."),window.addEventListener("keydown",(function e(t){if(!Object.keys(i).includes(t.key))return;const n=g(l),s=i[t.key];!function(e,t){u(e,r[t]).map((e=>{let t=!1;return e.forEach(((n,s)=>{const o=n.querySelector("game-token");o&&function(e,t,n,s){for(;e>0;){const o=t[--e].querySelector("game-token");if(n.value===(null==o?void 0:o.value)&&!s)return d(n,o),void(s=!0);if(o)return h(t,e,n),void(s=!1)}!function(e,t){e[0].appendChild(t)}(t,n)}(s,e,o,t)})),e}))}(c,s);if(g(l)===n)return void console.log("BOARD HASN'T CHANGED");setTimeout(m,250),function(){if(f(c))return!0;const e=r.right;return[...u(c,r.down),...u(c,e)].some((e=>e.some(((t,n)=>{if(n+1===e.length)return!1;const s=t.querySelector("game-token"),o=e[n+1].querySelector("game-token");return!(!s||!o)&&(s.value===o.value||void 0)}))))}()||(console.log("YOU LOST."),window.removeEventListener("keydown",e))})),m();
//# sourceMappingURL=index.97d032b8.js.map
