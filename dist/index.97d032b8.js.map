{"mappings":"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","sources":["src/ts/gameScore.ts","src/ts/gameTile.ts","src/ts/gameBoard.ts","src/ts/gameToken.ts","src/ts/main.ts"],"sourcesContent":["export class GameScore extends HTMLElement {\r\n  get score(): number {\r\n    return this._score;\r\n  }\r\n  set score(value: number) {\r\n    this._score = value;\r\n    this.innerHTML = `\r\n      <style>\r\n        game-score {\r\n          contain: content;\r\n          display: grid;\r\n          place-content: center;\r\n        }\r\n      </style>\r\n      <p>Score: ${this._score}</p>\r\n    `;\r\n  }\r\n\r\n  private _score: number = 0;\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.score = 0;\r\n  }\r\n}\r\n","export class GameTile extends HTMLElement {\r\n  x!: number;\r\n  y!: number;\r\n\r\n  connectedCallback() {\r\n    this.innerHTML = `\r\n    <style>\r\n    game-tile {\r\n      display: grid;\r\n      contain: layout size style;\r\n      grid-auto-flow: row;\r\n      place-content: center;\r\n    }\r\n    </style>\r\n    `;\r\n    let xString = this.getAttribute('x') ?? '';\r\n    this.x = parseInt(xString);\r\n\r\n    let yString = this.getAttribute('y') ?? '';\r\n    this.y = parseInt(yString);\r\n  }\r\n}\r\n","import {GameTile} from \"./gameTile\";\r\n\r\nexport class GameBoard extends HTMLElement {\r\n  rows!: number;\r\n  columns!: number;\r\n  tiles: GameTile[] = [];\r\n\r\n  static get observedAttributes() {\r\n    return ['rows', 'columns'];\r\n  }\r\n\r\n  private createBoard() {\r\n    const template = document.createElement('template');\r\n\r\n    template.innerHTML = `\r\n      <style>\r\n        game-board {\r\n          display: grid;\r\n          grid-template-columns: repeat(${this.columns}, 1fr);\r\n          contain: content;\r\n        }\r\n      </style>`;\r\n    this.replaceChildren(template.content);\r\n    for (let y = 0; y < this.rows; y++) {\r\n      for (let x = 0; x < this.columns; x++) {\r\n        const gameTile = document.createElement('game-tile') as GameTile;\r\n        gameTile.setAttribute('x', x.toString());\r\n        gameTile.setAttribute('y', y.toString());\r\n\r\n        this.appendChild(gameTile);\r\n        this.tiles.push(gameTile)\r\n      }\r\n    }\r\n  }\r\n\r\n  connectedCallback() {\r\n    console.log(\"game-board connected\")\r\n  }\r\n\r\n  attributeChangedCallback() {\r\n    const rowsAttribute = this.getAttribute('rows') ?? '4';\r\n    this.rows = parseInt(rowsAttribute);\r\n    const columnsAttribute = this.getAttribute('columns') ?? '4';\r\n    this.columns = parseInt(columnsAttribute);\r\n    console.log('attributes changed')\r\n    this.createBoard();\r\n  }\r\n}\r\n","export class GameToken extends HTMLElement {\r\n  value: number = 2;\r\n  id!: string;\r\n  init = true;\r\n\r\n  private oldOffsetTop!: number;\r\n  private oldOffsetLeft!: number;\r\n\r\n  connectedCallback() {\r\n    if (this.init) {\r\n      this.id = \"id\" + Math.random().toString(16).slice(2, 10);\r\n      this.setAttribute('id', this.id);\r\n      this.init = false;\r\n\r\n      this.style.contain = 'content';\r\n      this.style.display = 'grid';\r\n      this.style.placeContent = 'center';\r\n      this.style.placeItems = 'center';\r\n      this.style.position = 'relative';\r\n      this.style.animation = `slide${this.id} 250ms ease-in-out`;\r\n    }\r\n\r\n    this.oldOffsetLeft = this.oldOffsetLeft ?? this.offsetLeft;\r\n    this.oldOffsetTop = this.oldOffsetTop ?? this.offsetTop;\r\n\r\n    this.innerHTML = `\r\n    <style>\r\n      @keyframes slide${this.id} {\r\n        from{\r\n          transform: translate(${this.oldOffsetLeft - this.offsetLeft}px, ${this.oldOffsetTop - this.offsetTop}px);\r\n        }\r\n        to {\r\n          transform: translate(0, 0);\r\n        }\r\n      }\r\n    </style>\r\n    <p>${this.value}</p>\r\n    `\r\n\r\n    // console.info(`Token was at ${this.oldOffsetLeft}px / ${this.oldOffsetTop}px`)\r\n    // console.info(`Connecting Token at ${this.offsetLeft}px / ${this.offsetTop}px`)\r\n    this.oldOffsetTop = this.offsetTop;\r\n    this.oldOffsetLeft = this.offsetLeft;\r\n  }\r\n}\r\n","import {GameScore} from \"./gameScore\";\r\nimport {GameTile} from \"./gameTile\";\r\nimport {GameBoard} from \"./gameBoard\";\r\nimport {GameToken} from \"./gameToken\";\r\n\r\nconst customGameElements = {\r\n  'game-board': GameBoard,\r\n  'game-token': GameToken,\r\n  'game-tile': GameTile,\r\n  'game-score': GameScore,\r\n};\r\n\r\ntype DirectionKey = \"ArrowLeft\" | \"ArrowRight\" | \"ArrowDown\" | \"ArrowUp\";\r\ntype Direction = \"up\" | \"down\" | \"left\" | \"right\";\r\ntype Axis = \"x\" | \"y\";\r\ntype AxisInfo = { cross: Axis; main: Axis; reversed: boolean, length: 'columns' | 'rows' };\r\n\r\nconst axes: {\r\n  [key in Direction]: AxisInfo;\r\n} = {\r\n  up: {main: 'x', cross: 'y', reversed: false, length: 'columns'},\r\n  down: {main: 'x', cross: 'y', reversed: true, length: 'columns'},\r\n  left: {main: 'y', cross: 'x', reversed: false, length: 'rows'},\r\n  right: {main: 'y', cross: 'x', reversed: true, length: 'rows'},\r\n}\r\n\r\nconst keyDirection: {\r\n  [key in DirectionKey]: Direction;\r\n} = {\r\n  \"ArrowLeft\": \"left\",\r\n  \"ArrowRight\": \"right\",\r\n  \"ArrowDown\": \"down\",\r\n  \"ArrowUp\": \"up\"\r\n}\r\nObject.entries(customGameElements).forEach(([element, className]) => {\r\n  console.info(`Registering <${element}>`)\r\n\r\n  customElements.define(element, className);\r\n\r\n});\r\n\r\nconst board = document.getElementsByTagName('game-board')[0] as GameBoard;\r\nconst score = document.getElementsByTagName('game-score')[0] as GameScore;\r\nconst tiles: GameTile[] = Array.from(board.querySelectorAll('game-tile'));\r\n\r\nconsole.log(\"Starting game.\")\r\n\r\nwindow.addEventListener('keydown', handleKey);\r\nplaceRandomToken();\r\n\r\nfunction handleKey(event: KeyboardEvent) {\r\n  if (!Object.keys(keyDirection).includes(event.key)) return;\r\n\r\n  const boardBeforeMove = stringify(board);\r\n\r\n  const direction = keyDirection[event.key as DirectionKey];\r\n  slideTokens(tiles, direction)\r\n\r\n  const boardAfterMove = stringify(board);\r\n\r\n  if (boardAfterMove === boardBeforeMove) {\r\n    console.log(\"BOARD HASN'T CHANGED\");\r\n    return;\r\n  }\r\n\r\n  setTimeout(placeRandomToken, 250);\r\n\r\n  if (!isMovePossible()) {\r\n    console.log(\"YOU LOST.\")\r\n    window.removeEventListener('keydown', handleKey);\r\n  }\r\n}\r\n\r\n// could this logic be flipped? search through the tiles for the next token and whether it fits?\r\n// + could be more functional, would return the modified tiles\r\n// - would look at every tile, often more than once and unnecessarily\r\nfunction slideTokens(tiles: GameTile[], direction: Direction) {\r\n  const axisInfo = axes[direction];\r\n\r\n  let lanes: GameTile[][] = sortTilesIntoLanes(tiles, axisInfo)\r\n  lanes.map((lane) => {\r\n    let tokenMerged = false;\r\n    lane.forEach((tile, index) => {\r\n      const token = tile.querySelector('game-token') as GameToken;\r\n      if (!token) return;\r\n      slideSingleToken(index, lane, token, tokenMerged);\r\n    });\r\n    return lane;\r\n  })\r\n}\r\n\r\nfunction sortTilesIntoLanes(tiles: GameTile[], axisInfo: AxisInfo) {\r\n  const laneAxis: Axis = axisInfo.main;\r\n  return tiles.reduce((lanes: GameTile[][], tile) => {\r\n    const lane = tile[laneAxis];\r\n    if (lanes.hasOwnProperty(lane) && axisInfo.reversed) {\r\n      lanes[lane].unshift(tile);\r\n    } else if (lanes.hasOwnProperty(lane)) {\r\n      lanes[lane].push(tile);\r\n    } else {\r\n      lanes[lane] = [tile]\r\n    }\r\n    return lanes;\r\n  }, []);\r\n}\r\n\r\nfunction slideSingleToken(index: number, lane: GameTile[], token: GameToken, tokenMerged: boolean) {\r\n  while (index > 0) {\r\n    index--;\r\n    const tileToCheck = lane[index];\r\n    const otherToken = tileToCheck.querySelector('game-token') as GameToken;\r\n    if (token.value === otherToken?.value && !tokenMerged) {\r\n      mergeOnNextTile(token, otherToken);\r\n      tokenMerged = true;\r\n      return;\r\n    } else if (otherToken) {\r\n      leaveOnCurrentTile(lane, index, token);\r\n      tokenMerged = false;\r\n      return;\r\n    }\r\n  }\r\n  leaveOnLastTile(lane, token);\r\n}\r\n\r\nfunction isMovePossible(): boolean {\r\n  const emptyTiles = getEmptyTiles(tiles);\r\n  if (emptyTiles) return true;\r\n\r\n  const vertAxisInfo = axes['down'];\r\n  const horAxisInfo = axes['right'];\r\n\r\n  let lanes: GameTile[][] = [\r\n    ...sortTilesIntoLanes(tiles, vertAxisInfo),\r\n    ...sortTilesIntoLanes(tiles, horAxisInfo)\r\n  ]\r\n  return lanes\r\n    .some(lane => lane\r\n      .some((tile, index) => {\r\n        if (index + 1 === lane.length) return false;\r\n        const token = tile.querySelector('game-token') as GameToken;\r\n        const nextToken = lane[index + 1].querySelector('game-token') as GameToken;\r\n        if (!(token && nextToken)) return false;\r\n        else if (token.value === nextToken.value) {\r\n          return true;\r\n        }\r\n      })\r\n    )\r\n}\r\n\r\nfunction mergeOnNextTile(token: GameToken, otherToken: GameToken) {\r\n  token.value *= 2;\r\n  score.score = score.score + token.value;\r\n  otherToken.replaceWith(token);\r\n}\r\n\r\nfunction leaveOnCurrentTile(lane: GameTile[], searchIndex: number, token: GameToken) {\r\n  const previousTile = lane[searchIndex + 1];\r\n  previousTile.appendChild(token)\r\n}\r\n\r\nfunction leaveOnLastTile(lane: GameTile[], token: GameToken) {\r\n  lane[0].appendChild(token)\r\n}\r\n\r\nfunction getEmptyTiles(tiles: GameTile[]) {\r\n  return tiles\r\n    .filter(tile => Array.from(tile.children)\r\n      .every(child => !(child instanceof GameToken)));\r\n}\r\n\r\nfunction placeRandomToken() {\r\n  const emptyTiles = getEmptyTiles(tiles);\r\n  const randomIndex = Math.floor(Math.random() * emptyTiles.length);\r\n  const token = document.createElement('game-token');\r\n  emptyTiles[randomIndex].appendChild(token);\r\n}\r\n\r\n// stolen and modified from https://stackoverflow.com/questions/46880822/how-to-json-stringify-a-dom-element\r\nfunction stringify(element: Element) {\r\n  let obj: { name: string; attributes: Array<any>; children: Array<any> } = {\r\n    name: element.localName,\r\n    attributes: [],\r\n    children: [],\r\n  };\r\n\r\n  Array.from(element.attributes).forEach(a => {\r\n    obj.attributes.push({name: a.name, value: a.value});\r\n  });\r\n  Array.from(element.children).forEach(child => {\r\n    obj.children.push(stringify(child));\r\n  });\r\n\r\n  return JSON.stringify(obj);\r\n}\r\n\r\nexport const Game = {\r\n  placeRandomToken\r\n}\r\n"],"names":["$5d5bedbab477819c$export$e9aef883a3932a46","HTMLElement","score","this","_score","value","innerHTML","super","$3ebde6d0a8694fa1$export$ae62e2a19941d7f4","connectedCallback","ref","xString","getAttribute","ref1","x","parseInt","yString","y","$7b6b0808d7c25710$export$5e17e8ad324a9581","observedAttributes","createBoard","template","document","createElement","columns","replaceChildren","content","rows","gameTile","setAttribute","toString","appendChild","tiles","push","console","log","attributeChangedCallback","rowsAttribute","columnsAttribute","$040ec00c53c07bdd$export$1d51a309a5a565af","_oldOffsetLeft","_oldOffsetTop","init","id","Math","random","slice","style","contain","display","placeContent","placeItems","position","animation","oldOffsetLeft","offsetLeft","oldOffsetTop","offsetTop","$8cc1f0b9034d4b3b$var$customGameElements","$8cc1f0b9034d4b3b$var$axes","up","main","cross","reversed","length","down","left","right","$8cc1f0b9034d4b3b$var$keyDirection","ArrowLeft","ArrowRight","ArrowDown","ArrowUp","Object","entries","forEach","element","className","info","customElements","define","$8cc1f0b9034d4b3b$var$board","getElementsByTagName","$8cc1f0b9034d4b3b$var$score","$8cc1f0b9034d4b3b$var$tiles","Array","from","querySelectorAll","$8cc1f0b9034d4b3b$var$sortTilesIntoLanes","axisInfo","laneAxis","reduce","lanes","tile","lane","hasOwnProperty","unshift","$8cc1f0b9034d4b3b$var$mergeOnNextTile","token","otherToken","replaceWith","$8cc1f0b9034d4b3b$var$leaveOnCurrentTile","searchIndex","$8cc1f0b9034d4b3b$var$getEmptyTiles","filter","children","every","child","$8cc1f0b9034d4b3b$var$placeRandomToken","emptyTiles","randomIndex","floor","$8cc1f0b9034d4b3b$var$stringify","obj","name","localName","attributes","a","JSON","stringify","window","addEventListener","$8cc1f0b9034d4b3b$var$handleKey","event","keys","includes","key","boardBeforeMove","direction","map","tokenMerged","index","querySelector","$8cc1f0b9034d4b3b$var$leaveOnLastTile","$8cc1f0b9034d4b3b$var$slideSingleToken","$8cc1f0b9034d4b3b$var$slideTokens","setTimeout","horAxisInfo","some","nextToken","$8cc1f0b9034d4b3b$var$isMovePossible","removeEventListener"],"version":3,"file":"index.97d032b8.js.map"}